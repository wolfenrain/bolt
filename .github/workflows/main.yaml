name: ci

on:
  pull_request:
    branches:
      - main

jobs:
  # Ensures that every PR has a semantic title or commit.
  semantic_pull_request:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/semantic_pull_request.yml@v1

  # Enforces the spelling of words in the repository.
  spell_check:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/spell_check.yml@v1
    with:
      includes: |
        **/*.{dart,md,yaml}
        !.dart_tool/**/*.{dart,yaml}
        .*/**/*.yml
      runs_on: macos-latest
      modified_files_only: false

  # Creates a list of packages that have changed and stores them in the
  # outputs. Jobs like build and pana uses these values to determine which
  # packages to build and test.
  package_changes:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: read

    outputs:
      packages: ${{ steps.filter.outputs.changes }}

    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            bolt:
              - ./.github/actions/dart_package
              - packages/bolt/**
            bolt_udp_binding:
              - ./.github/actions/dart_package
              - packages/bolt_udp_binding/**
            bolt_websocket_binding:
              - ./.github/actions/dart_package
              - packages/bolt_websocket_binding/**

  # Build and test the dart packages that have changed.
  #
  # If the matrix is empty, no jobs will be created.
  build_packages:
    needs: package_changes

    strategy:
      matrix:
        package: ${{ fromJSON(needs.package_changes.outputs.packages) }}

    runs-on: ubuntu-latest

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - name: 🐦 Dart Format, Analyze and Test (${{ matrix.package }})
        uses: ./.github/actions/dart_package
        with:
          working_directory: packages/${{ matrix.package }}

  # Run pana on the packages that have changed.
  #
  # If the matrix is empty, no jobs will be created.
  pana:
    needs: package_changes

    strategy:
      matrix:
        package: ${{ fromJSON(needs.package_changes.outputs.packages) }}

    runs-on: ubuntu-latest

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - name: 📊 Verify Pana Score (${{ matrix.package }})
        uses: ./.github/actions/pana
        with:
          working_directory: packages/${{ matrix.package }}

  # Simply exists to be the final job in the workflow. This is required to
  # ensure that the workflow fails if any of the needed jobs fail.
  #
  # The build and pana job might not spawn but as long as the other jobs
  # succeed this job will be considered successful through skipping.
  ci:
    needs: [spell_check, semantic_pull_request, build_packages, pana]

    runs-on: ubuntu-latest

    steps:
      - name: noop
        run: echo 'noop'
